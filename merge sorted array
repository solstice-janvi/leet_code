class Solution {
public:
void merge(std::vector<int>& nums1, int m, std::vector<int>& nums2, int n) {
    int index1 = m - 1; // Index of the last element in nums1
    int index2 = n - 1; // Index of the last element in nums2
    int mergeIndex = m + n - 1; // Index to merge elements into nums1

    // Merge nums1 and nums2 from the end
    while (index1 >= 0 && index2 >= 0) {
        if (nums1[index1] > nums2[index2]) {
            nums1[mergeIndex--] = nums1[index1--];
        } else {
            nums1[mergeIndex--] = nums2[index2--];
        }
    }

    // If there are remaining elements in nums2, copy them to nums1
    while (index2 >= 0) {
        nums1[mergeIndex--] = nums2[index2--];
    }
}
};
